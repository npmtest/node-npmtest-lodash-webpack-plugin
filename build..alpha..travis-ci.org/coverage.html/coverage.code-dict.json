{"/home/travis/build/npmtest/node-npmtest-lodash-webpack-plugin/test.js":"/* istanbul instrument in package npmtest_lodash_webpack_plugin */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-lodash-webpack-plugin/lib.npmtest_lodash_webpack_plugin.js":"/* istanbul instrument in package npmtest_lodash_webpack_plugin */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_lodash_webpack_plugin = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_lodash_webpack_plugin = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-lodash-webpack-plugin/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-lodash-webpack-plugin && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_lodash_webpack_plugin */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_lodash_webpack_plugin\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_lodash_webpack_plugin.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_lodash_webpack_plugin.rollup.js'] =\n            local.assetsDict['/assets.npmtest_lodash_webpack_plugin.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_lodash_webpack_plugin.__dirname + '/lib.npmtest_lodash_webpack_plugin.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-lodash-webpack-plugin/node_modules/lodash-webpack-plugin/lib/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _includes2 = require('lodash/includes');\n\nvar _includes3 = _interopRequireDefault(_includes2);\n\nvar _isMatch2 = require('lodash/isMatch');\n\nvar _isMatch3 = _interopRequireDefault(_isMatch2);\n\nvar _memoize2 = require('lodash/memoize');\n\nvar _memoize3 = _interopRequireDefault(_memoize2);\n\nvar _forOwn2 = require('lodash/forOwn');\n\nvar _forOwn3 = _interopRequireDefault(_forOwn2);\n\nvar _escapeRegExp2 = require('lodash/escapeRegExp');\n\nvar _escapeRegExp3 = _interopRequireDefault(_escapeRegExp2);\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nexports.default = Plugin;\n\nvar _fs = require('fs');\n\nvar _fs2 = _interopRequireDefault(_fs);\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _listing = require('./listing');\n\nvar _mapping = require('./mapping');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar lodashRoot = _path2.default.dirname(require.resolve('lodash'));\nvar normalize = function normalize(string) {\n  return string.replace(reFwdSep, rsSysSep);\n};\n\nvar reFwdSep = /\\//g;\nvar rsSysSep = (0, _escapeRegExp3.default)(_path2.default.sep);\nvar reLodashRes = RegExp(normalize('lodash(?:/(?!fp/)|-amd/|-es/|\\\\.\\\\w+/)'));\nvar reExplicitReq = RegExp('^lodash(?:/|-amd/|-es/|\\\\.\\\\w+/)\\\\w+$');\n\nfunction getPatterns(options) {\n  var result = [];\n  (0, _forOwn3.default)(_mapping.features, function (pairs, key) {\n    if (!options[key]) {\n      result.push.apply(result, _toConsumableArray(pairs));\n    }\n  });\n  return result;\n}\n\n/*----------------------------------------------------------------------------*/\n\nvar LodashModuleReplacementPlugin = function () {\n  function LodashModuleReplacementPlugin(options) {\n    _classCallCheck(this, LodashModuleReplacementPlugin);\n\n    this.matches = [];\n    this.options = Object.assign({}, options);\n    this.patterns = getPatterns(this.options);\n    this.resolve = this.resolve.bind(this);\n  }\n\n  _createClass(LodashModuleReplacementPlugin, [{\n    key: 'apply',\n    value: function apply(compiler) {\n      var resolve = (0, _memoize3.default)(this.resolve, function (_ref) {\n        var resource = _ref.resource;\n        return resource;\n      });\n      compiler.plugin('normal-module-factory', function (nmf) {\n        nmf.plugin('after-resolve', function (data, callback) {\n          if (data) {\n            data.resource = resolve(data);\n            return callback(null, data);\n          }\n          return callback();\n        });\n      });\n    }\n  }, {\n    key: 'resolve',\n    value: function resolve(_ref2) {\n      var _this = this;\n\n      var rawRequest = _ref2.rawRequest,\n          resource = _ref2.resource;\n\n      var result = resource;\n      if (!reLodashRes.test(resource)) {\n        return result;\n      }\n      var isExplicit = reExplicitReq.test(rawRequest);\n      var resName = _path2.default.basename(resource, '.js');\n      var resRoot = _path2.default.dirname(resource);\n\n      if (isExplicit) {\n        // Apply any feature set overrides for explicitly requested modules.\n        var override = _mapping.overrides[_path2.default.basename(rawRequest, '.js')];\n        if (!(0, _isMatch3.default)(this.options, override)) {\n          this.patterns = getPatterns(Object.assign(this.options, override));\n        }\n      }\n      this.patterns.forEach(function (pair) {\n        // Replace matches as long as they aren't explicit requests for stubbed modules.\n        var isStubbed = (0, _includes3.default)(_listing.stubs, pair[1]);\n        if (resName != pair[0] || isExplicit && isStubbed) {\n          return;\n        }\n        var moduleFilename = `${pair[1]}.js`;\n        var modulePath = _path2.default.join(resRoot, moduleFilename);\n        var exists = _fs2.default.existsSync(modulePath);\n\n        if (isStubbed && !exists) {\n          exists = true;\n          modulePath = _path2.default.join(lodashRoot, moduleFilename);\n        }\n        if (exists) {\n          result = modulePath;\n          _this.matches.push([resource, result]);\n          return false;\n        }\n      });\n      return result;\n    }\n  }]);\n\n  return LodashModuleReplacementPlugin;\n}();\n\n;\n\n/*----------------------------------------------------------------------------*/\n\nfunction Plugin(nodeResolve, options) {\n  // For Webpack.\n  if (this instanceof Plugin) {\n    return new LodashModuleReplacementPlugin(nodeResolve);\n  }\n  // For Rollup.\n  var _resolveId = nodeResolve.resolveId;\n  var resolver = new LodashModuleReplacementPlugin(options);\n  var resolve = (0, _memoize3.default)(resolver.resolve, function (_ref3) {\n    var resource = _ref3.resource;\n    return resource;\n  });\n\n  return Object.assign({}, nodeResolve, {\n    resolveId(importee, importer) {\n      return _resolveId(importee, importer).then(function (id) {\n        return resolve({ 'rawRequest': importee, 'resource': id });\n      });\n    }\n  });\n};\nmodule.exports = exports['default'];","/home/travis/build/npmtest/node-npmtest-lodash-webpack-plugin/node_modules/lodash-webpack-plugin/lib/listing.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar stubs = exports.stubs = ['identity', 'noop', 'stubArray', 'stubFalse', 'stubObject', 'stubString', 'stubTrue'];\n\nexports.default = { stubs };","/home/travis/build/npmtest/node-npmtest-lodash-webpack-plugin/node_modules/lodash-webpack-plugin/lib/mapping.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar features = exports.features = {\n  'caching': [['_baseIndexOf', '_strictIndexOf'], ['_cacheHas', '_arrayIncludes'], ['_createSet', 'noop'], ['_MapCache', '_ListCache'], ['_SetCache', 'castArray'], ['_Stack', '_ListCache']],\n  'chaining': [['_getFuncName', 'stubString'], ['_isLaziable', 'stubFalse'], ['_LodashWrapper', 'noop']],\n  'cloning': [['_baseClone', 'identity']],\n  'coercions': [['_baseToNumber', 'identity'], ['_baseToString', 'identity'], ['_toKey', 'identity'], ['toFinite', 'identity'], ['toInteger', 'identity'], ['toLength', 'identity'], ['toNumber', 'identity'], ['toString', 'identity']],\n  'collections': [['_baseAggregator', '_arrayAggregator'], ['_baseFilter', '_arrayFilter'], ['_baseMap', '_arrayMap'], ['each', '_arrayEach'], ['eachRight', '_arrayEachRight'], ['every', '_arrayEvery'], ['filter', '_arrayFilter'], ['forEach', '_arrayEach'], ['forEachRight', '_arrayEachRight'], ['includes', '_arrayIncludes'], ['map', '_arrayMap'], ['reduce', '_arrayReduce'], ['reduceRight', '_arrayReduceRight'], ['sample', '_arraySample'], ['sampleSize', '_arraySampleSize'], ['shuffle', '_arrayShuffle'], ['some', '_arraySome']],\n  'currying': [['_createWrap', '_createPartial'], ['unary', '_baseUnary']],\n  'deburring': [['deburr', 'identity']],\n  'exotics': [['_baseGetTag', '_objectToString'], ['_equalByTag', 'eq'], ['_getAllKeys', '_nativeKeys'], ['_getAllKeysIn', '_nativeKeysIn'], ['_getSymbols', 'stubArray'], ['_getSymbolsIn', 'stubArray'], ['_getTag', '_objectToString'], ['_initCloneByTag', 'identity'], ['_mapToArray', 'stubArray'], ['_setToArray', 'stubArray'], ['_setToPairs', 'stubArray'], ['isArguments', 'stubFalse'], ['isArrayBuffer', 'baseIsArrayBuffer'], ['isBuffer', 'stubFalse'], ['isDate', 'baseIsDate'], ['isMap', 'stubFalse'], ['isRegExp', 'baseIsRegExp'], ['isSet', 'stubFalse'], ['isSymbol', 'stubFalse'], ['isTypedArray', 'stubFalse']],\n  'flattening': [['_baseFlatten', 'head'], ['_flatRest', 'identity']],\n  'guards': [['_getNative', '_getValue'], ['_getRawTag', '_objectToString'], ['_isIterateeCall', 'stubFalse'], ['_isPrototype', 'stubFalse'], ['_baseKeys', '_nativeKeys'], ['_baseKeysIn', '_nativeKeysIn'], ['_castFunction', 'identity'], ['_castRest', 'identity'], ['_shortOut', 'identity'], ['isNaN', 'baseIsNaN'], ['isNative', 'stubTrue'], ['keys', '_nativeKeys'], ['keysIn', '_nativeKeysIn'], ['times', '_baseTimes']],\n  'memoizing': [['_memoizeCapped', 'identity'], ['memoize', 'identity']],\n  'metadata': [['_baseSetData', 'identity'], ['_getData', 'noop'], ['_mergeData', 'identity'], ['_setData', 'identity'], ['_setToString', 'identity'], ['_setWrapToString', 'identity']],\n  'paths': [['_baseGet', '_getValue'], ['_castPath', 'identity'], ['_isKey', 'identity'], ['_parent', 'identity'], ['has', '_baseHas'], ['hasIn', '_baseHasIn'], ['property', '_baseProperty'], ['propertyOf', '_basePropertyOf']],\n  'placeholders': [['_getHolder', 'noop'], ['_replaceHolders', 'stubArray']],\n  'shorthands': [['_baseIteratee', 'identity']],\n  'unicode': [['_hasUnicode', 'stubFalse'], ['_hasUnicodeWord', 'stubFalse'], ['_unicodeSize', '_asciiSize'], ['_unicodeToArray', '_asciiToArray'], ['_unicodeWords', '_asciiWords'], ['stringSize', '_asciiSize'], ['stringToArray', '_asciiToArray']]\n};\n\nvar overrides = exports.overrides = {\n  'ary': { 'currying': true },\n  'camelCase': { 'unicode': true },\n  'clone': { 'cloning': true },\n  'cloneDeep': { 'cloning': true },\n  'cloneDeepWith': { 'cloning': true },\n  'cloneWith': { 'cloning': true },\n  'concat': { 'flattening': true },\n  'curry': { 'currying': true },\n  'curryRight': { 'currying': true },\n  'difference': { 'flattening': true },\n  'differenceBy': { 'flattening': true },\n  'differenceWith': { 'flattening': true },\n  'flatMap': { 'flattening': true },\n  'flatMapDeep': { 'flattening': true },\n  'flatMapDepth': { 'flattening': true },\n  'flatten': { 'flattening': true },\n  'flattenDeep': { 'flattening': true },\n  'flattenDepth': { 'flattening': true },\n  'flip': { 'currying': true },\n  'kebabCase': { 'unicode': true },\n  'lowerCase': { 'unicode': true },\n  'parseInt': { 'coercions': true },\n  'partialRight': { 'currying': true },\n  'pick': { 'paths': true },\n  'rearg': { 'currying': true },\n  'snakeCase': { 'unicode': true },\n  'startCase': { 'unicode': true },\n  'union': { 'flattening': true },\n  'unionBy': { 'flattening': true },\n  'unionWith': { 'flattening': true },\n  'uniqueId': { 'coercions': true },\n  'upperCase': { 'unicode': true },\n  'xor': { 'flattening': true },\n  'xorBy': { 'flattening': true },\n  'xorWith': { 'flattening': true }\n};\n\nexports.default = { features, overrides };"}